{"version":3,"sources":["webpack:///./src/components/SelectMenu/SelectState.tsx","webpack:///./src/components/SelectMenu/SelectDay.tsx","webpack:///./src/components/SelectMenu/SelectTime.tsx","webpack:///./src/page-styles/signup.styles.ts","webpack:///./src/pages/signup.tsx","webpack:///./src/components/colors.ts","webpack:///./src/components/MyButton/MyButton.styles.ts","webpack:///./src/components/MyButton/index.ts","webpack:///./src/components/MyNav/Link.ts","webpack:///./src/components/MyNav/Bar.ts","webpack:///./src/components/MyNav/Brand.ts","webpack:///./src/components/MyNav/Dropdown.ts","webpack:///./src/components/MyNav/index.ts","webpack:///./src/components/MyForm/MyForm.styles.ts","webpack:///./src/components/MyForm/MyForm.tsx","webpack:///./src/components/Header/Header.tsx","webpack:///./src/components/Header/index.ts","webpack:///./src/components/Container/Container.styles.ts","webpack:///./src/components/Container/index.ts"],"names":["SelectState","react","reactstrap_es","type","name","id","SelectDay","SelectTime","FormContainer","styled","Container","_templateObject","ActionRow","div","_templateObject2","_templateObject3","Row","_templateObject4","SignUpPage","Header","md","placeholder","for","SelectState_SelectState","check","sm","SelectDay_SelectDay","SelectTime_SelectTime","MyButton","__webpack_require__","d","__webpack_exports__","maroon","darkMaroon","Button","Colors","Link","NavLink","Bar","Navbar","Bar_templateObject","Brand","NavbarBrand","Brand_templateObject","Dropdown","DropdownToggle","Dropdown_templateObject","DropDownContainer","MyForm","_React$Component","props","_this","call","this","toggle","bind","assertThisInitialized_default","state","isOpen","inheritsLoose_default","_proto","prototype","setState","render","MyNav","expand","href","className","navbar","onClick","nav","inNavbar","caret","right","MyForm_MyForm","React","Header_Header"],"mappings":"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","file":"component---src-pages-signup-tsx-874483aa321c50a1ddaf.js","sourcesContent":["import * as React from \"react\";\nimport { Input } from \"reactstrap\";\n\nexport const SelectState: React.SFC = () => {\n\treturn (\n<Input type=\"select\" name=\"state\" id=\"addressState\">\n<option>Alabama - AL</option>\n<option>Alaska - AK</option>\n<option>Arizona - AZ</option>\n<option>Arkansas - AR</option>\n<option>California - CA</option>\n<option>Colorado - CO</option>\n<option>Connecticut - CT</option>\n<option>Delaware - DE</option>\n<option>Florida - FL</option>\n<option>Georgia - GA</option>\n<option>Hawaii - HI</option>\n<option>Idaho - ID</option>\n<option>Illinois - IL</option>\n<option>Indiana - IN</option>\n<option>Iowa - IA</option>\n<option>Kansas - KS</option>\n<option>Kentucky - KY</option>\n<option>Louisiana - LA</option>\n<option>Maine - ME</option>\n<option>Maryland - MD</option>\n<option>Massachusetts - MA</option>\n<option>Michigan - MI</option>\n<option>Minnesota - MN</option>\n<option>Mississippi - MS</option>\n<option>Missouri - MO</option>\n<option>Montana - MT</option>\n<option>Nebraska - NE</option>\n<option>Nevada - NV</option>\n<option>New Hampshire - NH</option>\n<option>New Jersey - NJ</option>\n<option>New Mexico - NM</option>\n<option>New York - NY</option>\n<option>North Carolina - NC</option>\n<option>North Dakota - ND</option>\n<option>Ohio - OH</option>\n<option>Oklahoma - OK</option>\n<option>Oregon - OR</option>\n<option>Pennsylvania - PA</option>\n<option>Rhode Island - RI</option>\n<option>South Carolina - SC</option>\n<option>South Dakota - SD</option>\n<option>Tennessee - TN</option>\n<option>Texas - TX</option>\n<option>Utah - UT</option>\n<option>Vermont - VT</option>\n<option>Virginia - VA</option>\n<option>Washington - WA</option>\n<option>West Virginia - WV</option>\n<option>Wisconsin - WI</option>\n<option>Wyoming - WY</option>\n</Input>\n);\n};","import * as React from \"react\";\nimport { Input } from \"reactstrap\";\n\nexport const SelectDay: React.SFC = () => {\n\treturn (\n<Input type=\"select\" name=\"billingState\" id=\"billingState\">\n<option>Sunday</option>\n<option>Monday</option>\n<option>Tuesday</option>\n<option>Wednesday</option>\n<option>Thursday</option>\n<option>Friday</option>\n<option>Saturday</option>\n</Input>\n);\n};","import * as React from \"react\";\nimport { Input } from \"reactstrap\";\n\nexport const SelectTime: React.SFC = () => {\n\treturn (\n<Input type=\"select\" name=\"billingState\" id=\"billingState\">\n<option>8am - 10am</option>\n<option>10am - 12pm</option>\n<option>12pm - 2pm</option>\n<option>2pm - 4pm</option>\n<option>4pm - 6pm</option>\n<option>6pm - 8pm</option>\n</Input>\n);\n};","import styled from 'styled-components';\n\nimport { Container } from '../components/Container';\nimport { Row } from 'reactstrap';\n\nexport const FormContainer = styled(Container)`\n\tmargin-top: 100px;\n\tmargin-bottom: 50px;\n\toverflow-y: hidden;\n`;\n\nexport const FlexContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\t@media(min-width: 600px) {\n\t\tflex-direciton:row;\n\t}\n`;\n\nexport const FlexItem = styled.div`\n\n`;\n\nexport const ActionRow = styled(Row)`\n\tmin-width: 300px;\n`;","import * as React from \"react\";\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\n\nimport { Header } from \"../components/Header\";\nimport { MyButton } from \"../components/MyButton\";\nimport { SelectState, SelectDay, SelectTime } from \"../components/SelectMenu\";\nimport * as Style from \"../page-styles/signup.styles\";\n\ninterface ISignUpPageProps {}\n\nconst SignUpPage: React.SFC<ISignUpPageProps> = () => {\n  return (\n    <div>\n      <Header />\n      <Style.FormContainer>\n        <Form>\n          <Row>\n            <Col md={6}>\n              <FormGroup>\n                <Label>First Name</Label>\n                <Input type=\"text\" placeholder=\"John\" />\n              </FormGroup>\n            </Col>\n            <Col md={6}>\n              <FormGroup>\n                <Label>Last Name</Label>\n                <Input type=\"text\" placeholder=\"Doe\" />\n              </FormGroup>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <FormGroup>\n                <Label>Username</Label>\n                <Input\n                  type=\"text\"\n                  placeholder=\"For logging in\"\n                />\n              </FormGroup>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <FormGroup>\n                <Label for=\"userPassword\">Password</Label>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"userPassword\"\n                  placeholder=\"j1doe2p3!ULS\"\n                />\n                <FormText>Must contain at least 8 characters and one uppercase</FormText>\n              </FormGroup>\n            </Col>\n            <Col md={6}>\n              <FormGroup>\n                <Label for=\"userPassword\">Confirm Password</Label>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"confirmUserPassword\"\n                  placeholder=\"j1doe2p3!ULS\"\n                />\n                <FormText>Passwords must match</FormText>\n              </FormGroup>\n            </Col>\n          </Row>\n          <FormGroup>\n            <Label for=\"userEmail\">Email</Label>\n            <Input\n              type=\"email\"\n              name=\"email\"\n              id=\"userEmail\"\n              placeholder=\"johndoe@ULS.com\"\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for=\"userPhone\">Phone</Label>\n            <Input\n              type=\"text\"\n              name=\"phone\"\n              id=\"userPhone\"\n              placeholder=\"3131234567\"\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for=\"exampleAddress\">Pick Up and Delivery Address</Label>\n            <Input\n              type=\"text\"\n              name=\"address\"\n              id=\"exampleAddress\"\n              placeholder=\"1234 Main St\"\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for=\"exampleAddress2\">Pick Up and Delivery Address 2</Label>\n            <Input\n              type=\"text\"\n              name=\"address2\"\n              id=\"exampleAddress2\"\n              placeholder=\"Apartment, studio, or floor\"\n            />\n          </FormGroup>\n\n          <Row>\n            <Col md={6}>\n              <FormGroup>\n                <Label for=\"addressCity\">City</Label>\n                <Input type=\"text\" name=\"city\" id=\"addressCity\" />\n              </FormGroup>\n            </Col>\n            <Col md={4}>\n              <FormGroup>\n                <Label for=\"addressState\">State</Label>\n                <SelectState />\n              </FormGroup>\n            </Col>\n            <Col md={2}>\n              <FormGroup>\n                <Label for=\"addressZip\">Zip</Label>\n                <Input type=\"text\" name=\"zip\" id=\"addressZip\" />\n              </FormGroup>\n            </Col>\n          </Row>\n\n          <FormGroup check>\n            <Input type=\"checkbox\" name=\"check\" id=\"billingCheck\" />\n            <Label for=\"billingCheck\" check>\n              Is the billing address the same as the pick up and delivery address?\n            </Label>\n          </FormGroup>\n\n          <FormGroup>\n            <Label for=\"billingAddress\">Billing Address</Label>\n            <Input\n              type=\"text\"\n              name=\"address\"\n              id=\"billingAddress\"\n              placeholder=\"1234 Main St\"\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for=\"billingAddress2\">Billing Address 2</Label>\n            <Input\n              type=\"text\"\n              name=\"address2\"\n              id=\"billingAddress2\"\n              placeholder=\"Apartment, studio, or floor\"\n            />\n          </FormGroup>\n\n          <Row>\n            <Col md={6}>\n              <FormGroup>\n                <Label for=\"billingCity\">City</Label>\n                <Input type=\"text\" name=\"city\" id=\"billingCity\" />\n              </FormGroup>\n            </Col>\n            <Col md={4}>\n              <FormGroup>\n                <Label for=\"billingState\">State</Label>\n                <SelectState />\n              </FormGroup>\n            </Col>\n            <Col md={2}>\n              <FormGroup>\n                <Label for=\"billingZip\">Zip</Label>\n                <Input type=\"text\" name=\"zip\" id=\"exampleZip\" />\n              </FormGroup>\n            </Col>\n          </Row>\n          \n          <FormGroup>\n          <legend>Service</legend>  \n            <Label for=\"exampleText\" check>Type</Label>\n            <Col sm={10}>\n              <FormGroup check>\n                <Label check>\n                  <Input type=\"radio\" name=\"radio1\" />{' '}\n                  Student\n                </Label>\n              </FormGroup>\n              <FormGroup check>\n                <Label check>\n                  <Input type=\"radio\" name=\"radio1\" />{' '}\n                  Resident\n                </Label>\n              </FormGroup>\n            </Col>\n          </FormGroup>\n\n          <FormGroup>\n          <Label for=\"exampleText\">Bag Size</Label>\n          <Col sm={10}>\n            <FormGroup check>\n              <Label check>\n                <Input type=\"radio\" name=\"radio2\" />{' '}\n                Regular\n              </Label>\n            </FormGroup>\n            <FormGroup check>\n              <Label check>\n                <Input type=\"radio\" name=\"radio2\" />{' '}\n                Large\n              </Label>\n            </FormGroup>\n          </Col>\n          </FormGroup>\n          \n          <legend>Subscription</legend>\n          <FormGroup check>\n          <Label for=\"exampleText\">Billed Monthly</Label>\n          <Col sm={10}>\n            <FormGroup check>\n              <Label check>\n                <Input type=\"radio\" name=\"radio3\" />{' '}\n                Weekly (once a week pickup)\n              </Label>\n            </FormGroup>\n            <FormGroup check>\n              <Label check>\n                <Input type=\"radio\" name=\"radio3\" />{' '}\n                Biweekly (twice a week pickup)\n              </Label>\n            </FormGroup>\n          </Col>\n          </FormGroup>\n\n          <FormGroup check>\n          <Label for=\"exampleText\">Billed Per Service</Label>\n          <Col sm={10}>\n            <FormGroup check>\n              <Label check>\n                <Input type=\"radio\" name=\"radio3\" />{' '}\n                One time (one pickup)\n              </Label>\n            </FormGroup>\n            <FormGroup check>\n              <Label check>\n                <Input type=\"radio\" name=\"radio3\" />{' '}\n                Semester service (weekly for 16 weeks)\n              </Label>\n            </FormGroup>\n          </Col>\n          </FormGroup>\n\n          <Row>\n          <Col>\n          <legend>Pickup</legend>\n          <FormGroup check>\n            <Style.ActionRow>\n            <Col>\n            <Label>Day</Label>\n              <SelectDay />\n            </Col>\n\n            <Col>\n            <Label>Time</Label>\n              <SelectTime />\n            </Col>\n            </Style.ActionRow>\n            </FormGroup>\n          </Col>\n\n          \n          <Col>\n          <legend>Drop Off</legend>\n          <FormGroup check>\n            <Style.ActionRow>\n            <Col>\n            <Label>Day</Label>\n              <SelectDay />\n            </Col>\n\n            <Col>\n            <Label>Time</Label>\n              <SelectTime />\n            </Col>\n            </Style.ActionRow>\n          </FormGroup>\n          </Col>\n          </Row>\n\n          <FormGroup>\n            <legend>Notes</legend>\n            <Input\n              type=\"textarea\"\n              name=\"text\"\n              id=\"exampleText\"\n              placeholder=\"Anything we need to know? (Door code, laundry location, etc.)\"\n            />\n          </FormGroup>\n\n          <FormGroup>\n          <Label for=\"exampleText\">Terms and Conditions</Label>\n\n          </FormGroup>\n\n          <MyButton>Sign Up!</MyButton>\n\n          <FormGroup check>\n            <Input type=\"checkbox\" name=\"check\" id=\"exampleCheck\" />\n            <Label for=\"exampleCheck\" check>\n              I accept*\n            </Label>\n          </FormGroup>\n\n        </Form>\n      </Style.FormContainer>\n    </div>\n  );\n};\nexport default SignUpPage;\n","export const maroon = '#B30B39';    //'#900C3F';\nexport const white = '#FFF';\nexport const black = '#000';\nexport const darkMaroon = '#640D26';","import styled from 'styled-components';\nimport { Button } from 'reactstrap';\n\nimport * as Colors from '../colors';\n\nexport const MyButton = styled(Button)`\n\tbackground-color: ${Colors.maroon};\n\tborder: none;\n\t:hover {\n\t\tbackground-color: ${Colors.darkMaroon};\n\t}\n`;","export { MyButton } from './MyButton.styles';","import styled from 'styled-components';\nimport { NavLink } from 'reactstrap';\n\nimport * as Colors from '../colors';\n\nexport const Link = styled(NavLink)`\ncolor: white;\n:hover {\n    color: ${Colors.maroon};\n}\n`;","import styled from 'styled-components';\nimport { Navbar } from 'reactstrap';\n\nexport const Bar = styled(Navbar)`\n background-color: #0e0e0e;\n opacity: 0.9;\n position: fixed;\n top: 0;\n width: 100%;\n height: 60px;\n `;","import styled from 'styled-components';\nimport { NavbarBrand } from 'reactstrap';\nimport * as Colors from '../colors';\n\nexport const Brand = styled(NavbarBrand)`\ncolor: white;\n:hover {\n    color: ${Colors.maroon};\n}\n`;","import styled from 'styled-components';\nimport { DropdownToggle } from 'reactstrap';\nimport * as Colors from '../colors';\n\nexport const Dropdown = styled(DropdownToggle)`\n\tcolor: white;\n\t:hover {\n\t\tcolor: ${Colors.maroon};\n\t}\n`;","export { Link } from './Link';\nexport { Bar } from './Bar';\nexport { Brand } from './Brand';\nexport { Dropdown } from './Dropdown';","import styled from 'styled-components';\n\nexport const DropDownContainer = styled.div`\n    width: 300px;\n    margin: 16px;\n`;","import * as React from 'react';\nimport {\n  Form,\n  FormGroup,\n  Input\n} from 'reactstrap';\n\nimport { MyButton } from '../MyButton';\nimport { DropDownContainer } from './MyForm.styles';\n\nexport const MyForm: React.SFC = () => {\nreturn(\n  <div>\n  <DropDownContainer>\n    <Form>\n      <FormGroup>\n        {/* <Label for=\"exampleEmail\">Email</Label> */}\n        <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"Email\" />\n      </FormGroup>\n      <FormGroup>\n        {/* <Label for=\"examplePassword\">Password</Label> */}\n        <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"Password\" />\n      </FormGroup>\n      <MyButton>Login</MyButton>\n    </Form>\n  </DropDownContainer>\n</div>\n);\n}","import * as React from 'react';\nimport {\n  Collapse,\n  Nav,\n  NavbarToggler,\n  NavItem,\n  UncontrolledDropdown,\n  DropdownMenu,\n} from 'reactstrap';\n\nimport * as MyNav from '../MyNav';\nimport { MyForm } from '../MyForm';\nimport { MyButton } from '../MyButton';\n\nexport class Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n    \n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  render() {\n    return (\n      <MyNav.Bar expand=\"md\">\n        <MyNav.Brand href=\"#Top\">UltimateLaundrySolutions</MyNav.Brand>\n        <MyButton>Sign Up</MyButton>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <MyNav.Link href=\"#How\">How It Works</MyNav.Link>\n            </NavItem>\n            <NavItem>\n              <MyNav.Link href=\"#FAQ\">FAQs</MyNav.Link>\n            </NavItem>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n                <UncontrolledDropdown nav inNavbar>\n                  <MyNav.Dropdown nav caret>\n                    Login\n                  </MyNav.Dropdown>\n                  <DropdownMenu right>\n                    <MyForm />\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n            </Collapse>\n          </Nav>\n      </MyNav.Bar>\n    );\n  }\n  }","export { Header } from './Header';","import styled from 'styled-components';\n\nexport const Container = styled.div`\n\twidth: 75%;\n\tmargin: 0 auto;\n`;","export { Container } from './Container.styles';"],"sourceRoot":""}