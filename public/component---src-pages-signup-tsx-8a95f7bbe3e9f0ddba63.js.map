{"version":3,"sources":["webpack:///./src/components/SelectMenu/SelectState.tsx","webpack:///./src/components/SelectMenu/SelectDay.tsx","webpack:///./src/components/SelectMenu/SelectTime.tsx","webpack:///./src/page-styles/signup.styles.ts","webpack:///./src/pages/signup.tsx","webpack:///./src/components/colors.ts","webpack:///./src/components/MyButton/MyButton.styles.ts","webpack:///./src/components/MyButton/index.ts","webpack:///./src/components/MyNav/Link.ts","webpack:///./src/components/MyNav/Bar.ts","webpack:///./src/components/MyNav/Brand.ts","webpack:///./src/components/MyNav/Dropdown.ts","webpack:///./src/components/MyNav/index.ts","webpack:///./src/components/MyForm/MyForm.styles.ts","webpack:///./src/components/MyForm/MyForm.tsx","webpack:///./src/components/Header/Header.tsx","webpack:///./src/components/Header/index.ts","webpack:///./src/components/Container/Container.styles.ts","webpack:///./src/components/Container/index.ts"],"names":["SelectState","react","reactstrap_es","type","name","SelectDay","SelectTime","FormContainer","styled","Container","_templateObject","ActionRow","div","_templateObject2","_templateObject3","Row","_templateObject4","SignUpPage","Header","md","placeholder","for","id","SelectState_SelectState","check","sm","SelectDay_SelectDay","SelectTime_SelectTime","MyButton","__webpack_require__","d","__webpack_exports__","maroon","darkMaroon","Button","Colors","Link","NavLink","Bar","Navbar","Bar_templateObject","Brand","NavbarBrand","Brand_templateObject","Dropdown","DropdownToggle","Dropdown_templateObject","DropDownContainer","MyForm","_React$Component","props","_this","call","this","toggle","bind","assertThisInitialized_default","state","isOpen","inheritsLoose_default","_proto","prototype","setState","render","MyNav","expand","href","className","navbar","onClick","nav","inNavbar","caret","right","MyForm_MyForm","React","Header_Header"],"mappings":"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","file":"component---src-pages-signup-tsx-8a95f7bbe3e9f0ddba63.js","sourcesContent":["import * as React from \"react\";\r\nimport { Input } from \"reactstrap\";\r\n\r\nexport const SelectState: React.SFC = () => {\r\n\treturn (\r\n<Input type=\"select\" name=\"state\">\r\n<option>Alabama - AL</option>\r\n<option>Alaska - AK</option>\r\n<option>Arizona - AZ</option>\r\n<option>Arkansas - AR</option>\r\n<option>California - CA</option>\r\n<option>Colorado - CO</option>\r\n<option>Connecticut - CT</option>\r\n<option>Delaware - DE</option>\r\n<option>Florida - FL</option>\r\n<option>Georgia - GA</option>\r\n<option>Hawaii - HI</option>\r\n<option>Idaho - ID</option>\r\n<option>Illinois - IL</option>\r\n<option>Indiana - IN</option>\r\n<option>Iowa - IA</option>\r\n<option>Kansas - KS</option>\r\n<option>Kentucky - KY</option>\r\n<option>Louisiana - LA</option>\r\n<option>Maine - ME</option>\r\n<option>Maryland - MD</option>\r\n<option>Massachusetts - MA</option>\r\n<option>Michigan - MI</option>\r\n<option>Minnesota - MN</option>\r\n<option>Mississippi - MS</option>\r\n<option>Missouri - MO</option>\r\n<option>Montana - MT</option>\r\n<option>Nebraska - NE</option>\r\n<option>Nevada - NV</option>\r\n<option>New Hampshire - NH</option>\r\n<option>New Jersey - NJ</option>\r\n<option>New Mexico - NM</option>\r\n<option>New York - NY</option>\r\n<option>North Carolina - NC</option>\r\n<option>North Dakota - ND</option>\r\n<option>Ohio - OH</option>\r\n<option>Oklahoma - OK</option>\r\n<option>Oregon - OR</option>\r\n<option>Pennsylvania - PA</option>\r\n<option>Rhode Island - RI</option>\r\n<option>South Carolina - SC</option>\r\n<option>South Dakota - SD</option>\r\n<option>Tennessee - TN</option>\r\n<option>Texas - TX</option>\r\n<option>Utah - UT</option>\r\n<option>Vermont - VT</option>\r\n<option>Virginia - VA</option>\r\n<option>Washington - WA</option>\r\n<option>West Virginia - WV</option>\r\n<option>Wisconsin - WI</option>\r\n<option>Wyoming - WY</option>\r\n</Input>\r\n);\r\n};","import * as React from \"react\";\r\nimport { Input } from \"reactstrap\";\r\n\r\nexport const SelectDay: React.SFC = () => {\r\n\treturn (\r\n<Input type=\"select\" name=\"billingState\">\r\n<option>Sunday</option>\r\n<option>Monday</option>\r\n<option>Tuesday</option>\r\n<option>Wednesday</option>\r\n<option>Thursday</option>\r\n<option>Friday</option>\r\n<option>Saturday</option>\r\n</Input>\r\n);\r\n};","import * as React from \"react\";\r\nimport { Input } from \"reactstrap\";\r\n\r\nexport const SelectTime: React.SFC = () => {\r\n\treturn (\r\n<Input type=\"select\" name=\"billingState\">\r\n<option>8am - 10am</option>\r\n<option>10am - 12pm</option>\r\n<option>12pm - 2pm</option>\r\n<option>2pm - 4pm</option>\r\n<option>4pm - 6pm</option>\r\n<option>6pm - 8pm</option>\r\n</Input>\r\n);\r\n};","import styled from 'styled-components';\r\n\r\nimport { Container } from '../components/Container';\r\nimport { Row } from 'reactstrap';\r\n\r\nexport const FormContainer = styled(Container)`\r\n\tmargin-top: 100px;\r\n\tmargin-bottom: 50px;\r\n\toverflow-y: hidden;\r\n`;\r\n\r\nexport const FlexContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\t@media(min-width: 600px) {\r\n\t\tflex-direciton:row;\r\n\t}\r\n`;\r\n\r\nexport const FlexItem = styled.div`\r\n\r\n`;\r\n\r\nexport const ActionRow = styled(Row)`\r\n\tmin-width: 300px;\r\n`;","import * as React from \"react\";\r\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\r\n\r\nimport { Header } from \"../components/Header\";\r\nimport { MyButton } from \"../components/MyButton\";\r\nimport { SelectState, SelectDay, SelectTime } from \"../components/SelectMenu\";\r\nimport * as Style from \"../page-styles/signup.styles\";\r\n\r\ninterface ISignUpPageProps {}\r\n\r\nconst SignUpPage: React.SFC<ISignUpPageProps> = () => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Style.FormContainer>\r\n        <Form>\r\n          <Row>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label>First Name</Label>\r\n                <Input type=\"text\" placeholder=\"John\" />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label>Last Name</Label>\r\n                <Input type=\"text\" placeholder=\"Doe\" />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <Label>Username</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"For logging in\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"userPassword\">Password</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"userPassword\"\r\n                  placeholder=\"j1doe2p3!ULS\"\r\n                />\r\n                <FormText>Must contain at least 8 characters and one uppercase</FormText>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"userPassword\">Confirm Password</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"confirmUserPassword\"\r\n                  placeholder=\"j1doe2p3!ULS\"\r\n                />\r\n                <FormText>Passwords must match</FormText>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <FormGroup>\r\n            <Label for=\"userEmail\">Email</Label>\r\n            <Input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"userEmail\"\r\n              placeholder=\"johndoe@ULS.com\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"userPhone\">Phone</Label>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"phone\"\r\n              id=\"userPhone\"\r\n              placeholder=\"3131234567\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"exampleAddress\">Pick Up and Delivery Address</Label>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"address\"\r\n              id=\"exampleAddress\"\r\n              placeholder=\"1234 Main St\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"exampleAddress2\">Pick Up and Delivery Address 2</Label>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"address2\"\r\n              id=\"exampleAddress2\"\r\n              placeholder=\"Apartment, studio, or floor\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <Row>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"addressCity\">City</Label>\r\n                <Input type=\"text\" name=\"city\" id=\"addressCity\" />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Label for=\"addressState\">State</Label>\r\n                <SelectState id=\"addressState\"/>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={2}>\r\n              <FormGroup>\r\n                <Label for=\"addressZip\">Zip</Label>\r\n                <Input type=\"text\" name=\"zip\" id=\"addressZip\" />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n\r\n          <FormGroup check>\r\n            <Input type=\"checkbox\" name=\"check\" id=\"billingCheck\" />\r\n            <Label for=\"billingCheck\" check>\r\n              Is the billing address the same as the pick up and delivery address?\r\n            </Label>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"billingAddress\">Billing Address</Label>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"address\"\r\n              id=\"billingAddress\"\r\n              placeholder=\"1234 Main St\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"billingAddress2\">Billing Address 2</Label>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"address2\"\r\n              id=\"billingAddress2\"\r\n              placeholder=\"Apartment, studio, or floor\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <Row>\r\n            <Col md={6}>\r\n              <FormGroup>\r\n                <Label for=\"billingCity\">City</Label>\r\n                <Input type=\"text\" name=\"city\" id=\"billingCity\" />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <FormGroup>\r\n                <Label for=\"billingState\">State</Label>\r\n                <SelectState id=\"billingState\" />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={2}>\r\n              <FormGroup>\r\n                <Label for=\"billingZip\">Zip</Label>\r\n                <Input type=\"text\" name=\"zip\" id=\"exampleZip\" />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          \r\n          <FormGroup>\r\n          <legend>Service</legend>  \r\n            <Label for=\"exampleText\" check>Type</Label>\r\n            <Col sm={10}>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                  Student\r\n                </Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                  Resident\r\n                </Label>\r\n              </FormGroup>\r\n            </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n          <Label for=\"exampleText\">Bag Size</Label>\r\n          <Col sm={10}>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"radio2\" />{' '}\r\n                Regular\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"radio2\" />{' '}\r\n                Large\r\n              </Label>\r\n            </FormGroup>\r\n          </Col>\r\n          </FormGroup>\r\n          \r\n          <legend>Subscription</legend>\r\n          <FormGroup check>\r\n          <Label for=\"exampleText\">Billed Monthly</Label>\r\n          <Col sm={10}>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"radio3\" />{' '}\r\n                Weekly (once a week pickup)\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"radio3\" />{' '}\r\n                Biweekly (twice a week pickup)\r\n              </Label>\r\n            </FormGroup>\r\n          </Col>\r\n          </FormGroup>\r\n\r\n          <FormGroup check>\r\n          <Label for=\"exampleText\">Billed Per Service</Label>\r\n          <Col sm={10}>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"radio3\" />{' '}\r\n                One time (one pickup)\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"radio3\" />{' '}\r\n                Semester service (weekly for 16 weeks)\r\n              </Label>\r\n            </FormGroup>\r\n          </Col>\r\n          </FormGroup>\r\n\r\n          <Row>\r\n          <Col>\r\n          <legend>Pickup</legend>\r\n          <FormGroup check>\r\n            <Style.ActionRow>\r\n            <Col>\r\n            <Label>Day</Label>\r\n              <SelectDay id=\"pickUpDay\"/>\r\n            </Col>\r\n\r\n            <Col>\r\n            <Label>Time</Label>\r\n              <SelectTime id=\"pickUpTime\"/>\r\n            </Col>\r\n            </Style.ActionRow>\r\n            </FormGroup>\r\n          </Col>\r\n\r\n          \r\n          <Col>\r\n          <legend>Drop Off</legend>\r\n          <FormGroup check>\r\n            <Style.ActionRow>\r\n            <Col>\r\n            <Label>Day</Label>\r\n              <SelectDay id=\"dropOffDay\"/>\r\n            </Col>\r\n\r\n            <Col>\r\n            <Label>Time</Label>\r\n              <SelectTime id=\"dropOffTime\"/>\r\n            </Col>\r\n            </Style.ActionRow>\r\n          </FormGroup>\r\n          </Col>\r\n          </Row>\r\n\r\n          <FormGroup>\r\n            <legend>Notes</legend>\r\n            <Input\r\n              type=\"textarea\"\r\n              name=\"text\"\r\n              id=\"exampleText\"\r\n              placeholder=\"Anything we need to know? (Door code, laundry location, etc.)\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n          <Label for=\"exampleText\">Terms and Conditions</Label>\r\n\r\n          </FormGroup>\r\n\r\n          <MyButton>Sign Up!</MyButton>\r\n\r\n          <FormGroup check>\r\n            <Input type=\"checkbox\" name=\"check\" id=\"exampleCheck\" />\r\n            <Label for=\"exampleCheck\" check>\r\n              I accept*\r\n            </Label>\r\n          </FormGroup>\r\n\r\n        </Form>\r\n      </Style.FormContainer>\r\n    </div>\r\n  );\r\n};\r\nexport default SignUpPage;\r\n","export const maroon = '#B30B39';    //'#900C3F';\r\nexport const white = '#FFF';\r\nexport const black = '#000';\r\nexport const darkMaroon = '#640D26';","import styled from 'styled-components';\r\nimport { Button } from 'reactstrap';\r\n\r\nimport * as Colors from '../colors';\r\n\r\nexport const MyButton = styled(Button)`\r\n\tbackground-color: ${Colors.maroon};\r\n\tborder: none;\r\n\t:hover {\r\n\t\tbackground-color: ${Colors.darkMaroon};\r\n\t}\r\n`;","export { MyButton } from './MyButton.styles';","import styled from 'styled-components';\r\nimport { NavLink } from 'reactstrap';\r\n\r\nimport * as Colors from '../colors';\r\n\r\nexport const Link = styled(NavLink)`\r\ncolor: white;\r\n:hover {\r\n    color: ${Colors.maroon};\r\n}\r\n`;","import styled from 'styled-components';\r\nimport { Navbar } from 'reactstrap';\r\n\r\nexport const Bar = styled(Navbar)`\r\n background-color: #0e0e0e;\r\n opacity: 0.9;\r\n position: fixed;\r\n top: 0;\r\n width: 100%;\r\n height: 60px;\r\n `;","import styled from 'styled-components';\r\nimport { NavbarBrand } from 'reactstrap';\r\nimport * as Colors from '../colors';\r\n\r\nexport const Brand = styled(NavbarBrand)`\r\ncolor: white;\r\n:hover {\r\n    color: ${Colors.maroon};\r\n}\r\n`;","import styled from 'styled-components';\r\nimport { DropdownToggle } from 'reactstrap';\r\nimport * as Colors from '../colors';\r\n\r\nexport const Dropdown = styled(DropdownToggle)`\r\n\tcolor: white;\r\n\t:hover {\r\n\t\tcolor: ${Colors.maroon};\r\n\t}\r\n`;","export { Link } from './Link';\r\nexport { Bar } from './Bar';\r\nexport { Brand } from './Brand';\r\nexport { Dropdown } from './Dropdown';","import styled from 'styled-components';\r\n\r\nexport const DropDownContainer = styled.div`\r\n    width: 300px;\r\n    margin: 16px;\r\n`;","import * as React from 'react';\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Input\r\n} from 'reactstrap';\r\n\r\nimport { MyButton } from '../MyButton';\r\nimport { DropDownContainer } from './MyForm.styles';\r\n\r\nexport const MyForm: React.SFC = () => {\r\nreturn(\r\n  <div>\r\n  <DropDownContainer>\r\n    <Form>\r\n      <FormGroup>\r\n        {/* <Label for=\"exampleEmail\">Email</Label> */}\r\n        <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"Email\" />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        {/* <Label for=\"examplePassword\">Password</Label> */}\r\n        <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"Password\" />\r\n      </FormGroup>\r\n      <MyButton>Login</MyButton>\r\n    </Form>\r\n  </DropDownContainer>\r\n</div>\r\n);\r\n}","import * as React from 'react';\r\nimport {\r\n  Collapse,\r\n  Nav,\r\n  NavbarToggler,\r\n  NavItem,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n} from 'reactstrap';\r\n\r\nimport * as MyNav from '../MyNav';\r\nimport { MyForm } from '../MyForm';\r\nimport { MyButton } from '../MyButton';\r\n\r\nexport class Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n    \r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <MyNav.Bar expand=\"md\">\r\n        <MyNav.Brand href=\"#Top\">UltimateLaundrySolutions</MyNav.Brand>\r\n        <MyButton>Sign Up</MyButton>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem>\r\n              <MyNav.Link href=\"#How\">How It Works</MyNav.Link>\r\n            </NavItem>\r\n            <NavItem>\r\n              <MyNav.Link href=\"#FAQ\">FAQs</MyNav.Link>\r\n            </NavItem>\r\n            <NavbarToggler onClick={this.toggle} />\r\n            <Collapse isOpen={this.state.isOpen} navbar>\r\n                <UncontrolledDropdown nav inNavbar>\r\n                  <MyNav.Dropdown nav caret>\r\n                    Login\r\n                  </MyNav.Dropdown>\r\n                  <DropdownMenu right>\r\n                    <MyForm />\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n            </Collapse>\r\n          </Nav>\r\n      </MyNav.Bar>\r\n    );\r\n  }\r\n  }","export { Header } from './Header';","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\twidth: 75%;\r\n\tmargin: 0 auto;\r\n`;","export { Container } from './Container.styles';"],"sourceRoot":""}