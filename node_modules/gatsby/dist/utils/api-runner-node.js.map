{"version":3,"sources":["../../src/utils/api-runner-node.js"],"names":["Promise","require","glob","_","tracer","globalTracer","reporter","Cache","apiList","createNodeId","createContentDigest","caches","Map","boundPluginActionCreators","doubleBind","boundActionCreators","api","plugin","actionOptions","traceId","name","keys","Object","doubleBoundActionCreators","i","length","key","boundActionCreator","args","initAPICallTracing","parentSpan","startSpan","spanName","spanArgs","defaultSpanArgs","childOf","merge","runAPI","gatsbyNode","resolve","spanOptions","pluginSpan","setTag","pathPrefix","store","emitter","loadNodeContent","getNodes","getNode","hasNodeChanged","getNodeAndSavePathDependency","getState","program","prefixPaths","config","namespacedCreateNodeId","id","tracing","cache","get","init","set","apiCallArgs","actions","pluginOptions","fromCallback","callback","cb","err","val","finish","result","filteredPlugins","hasAPIFile","sync","apisRunningById","apisRunningByTraceId","waitingForCasacadeToFinish","module","exports","pluginSource","apiSpanArgs","apiSpan","forEach","traceTags","value","panic","plugins","flattenedPlugins","filter","noSourcePluginPlugins","p","apiRunInstance","span","startTime","Date","toJSON","type","node","internal","contentDigest","filename","page","path","JSON","stringify","waitForCascadingActions","push","has","currentCount","mapSeries","pluginName","catch","panicOnBuild","then","results","delete","size","emit","isEmpty","instance","apisByTraceIdCount"],"mappings":"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","sourcesContent":["const Promise = require(`bluebird`)\nconst glob = require(`glob`)\nconst _ = require(`lodash`)\n\nconst tracer = require(`opentracing`).globalTracer()\nconst reporter = require(`gatsby-cli/lib/reporter`)\nconst Cache = require(`./cache`)\nconst apiList = require(`./api-node-docs`)\nconst createNodeId = require(`./create-node-id`)\nconst createContentDigest = require(`./create-content-digest`)\n\nlet caches = new Map()\n\n// Bind action creators per plugin so we can auto-add\n// metadata to actions they create.\nconst boundPluginActionCreators = {}\nconst doubleBind = (boundActionCreators, api, plugin, actionOptions) => {\n  const { traceId } = actionOptions\n  if (boundPluginActionCreators[plugin.name + api + traceId]) {\n    return boundPluginActionCreators[plugin.name + api + traceId]\n  } else {\n    const keys = Object.keys(boundActionCreators)\n    const doubleBoundActionCreators = {}\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n      const boundActionCreator = boundActionCreators[key]\n      if (typeof boundActionCreator === `function`) {\n        doubleBoundActionCreators[key] = (...args) => {\n          // Let action callers override who the plugin is. Shouldn't be\n          // used that often.\n          if (args.length === 1) {\n            boundActionCreator(args[0], plugin, actionOptions)\n          } else if (args.length === 2) {\n            boundActionCreator(args[0], args[1], actionOptions)\n          }\n        }\n      }\n    }\n    boundPluginActionCreators[\n      plugin.name + api + traceId\n    ] = doubleBoundActionCreators\n    return doubleBoundActionCreators\n  }\n}\n\nconst initAPICallTracing = parentSpan => {\n  const startSpan = (spanName, spanArgs = {}) => {\n    const defaultSpanArgs = { childOf: parentSpan }\n\n    return tracer.startSpan(spanName, _.merge(defaultSpanArgs, spanArgs))\n  }\n\n  return {\n    tracer,\n    parentSpan,\n    startSpan,\n  }\n}\n\nconst runAPI = (plugin, api, args) => {\n  const gatsbyNode = require(`${plugin.resolve}/gatsby-node`)\n  if (gatsbyNode[api]) {\n    const parentSpan = args && args.parentSpan\n    const spanOptions = parentSpan ? { childOf: parentSpan } : {}\n    const pluginSpan = tracer.startSpan(`run-plugin`, spanOptions)\n\n    pluginSpan.setTag(`api`, api)\n    pluginSpan.setTag(`plugin`, plugin.name)\n\n    let pathPrefix = ``\n    const {\n      store,\n      emitter,\n      loadNodeContent,\n      getNodes,\n      getNode,\n      hasNodeChanged,\n      getNodeAndSavePathDependency,\n    } = require(`../redux`)\n    const { boundActionCreators } = require(`../redux/actions`)\n\n    const doubleBoundActionCreators = doubleBind(\n      boundActionCreators,\n      api,\n      plugin,\n      { ...args, parentSpan: pluginSpan }\n    )\n\n    if (store.getState().program.prefixPaths) {\n      pathPrefix = store.getState().config.pathPrefix\n    }\n\n    const namespacedCreateNodeId = id => createNodeId(id, plugin.name)\n\n    const tracing = initAPICallTracing(pluginSpan)\n\n    let cache = caches.get(plugin.name)\n    if (!cache) {\n      cache = new Cache({ name: plugin.name }).init()\n      caches.set(plugin.name, cache)\n    }\n\n    const apiCallArgs = [\n      {\n        ...args,\n        pathPrefix,\n        boundActionCreators: doubleBoundActionCreators,\n        actions: doubleBoundActionCreators,\n        loadNodeContent,\n        store,\n        emitter,\n        getNodes,\n        getNode,\n        hasNodeChanged,\n        reporter,\n        getNodeAndSavePathDependency,\n        cache,\n        createNodeId: namespacedCreateNodeId,\n        createContentDigest,\n        tracing,\n      },\n      plugin.pluginOptions,\n    ]\n\n    // If the plugin is using a callback use that otherwise\n    // expect a Promise to be returned.\n    if (gatsbyNode[api].length === 3) {\n      return Promise.fromCallback(callback => {\n        const cb = (err, val) => {\n          pluginSpan.finish()\n          callback(err, val)\n        }\n        gatsbyNode[api](...apiCallArgs, cb)\n      })\n    } else {\n      const result = gatsbyNode[api](...apiCallArgs)\n      pluginSpan.finish()\n      return Promise.resolve(result)\n    }\n  }\n\n  return null\n}\n\nlet filteredPlugins\nconst hasAPIFile = plugin => glob.sync(`${plugin.resolve}/gatsby-node*`)[0]\n\nlet apisRunningById = new Map()\nlet apisRunningByTraceId = new Map()\nlet waitingForCasacadeToFinish = []\n\nmodule.exports = async (api, args = {}, pluginSource) =>\n  new Promise(resolve => {\n    const { parentSpan } = args\n    const apiSpanArgs = parentSpan ? { childOf: parentSpan } : {}\n    const apiSpan = tracer.startSpan(`run-api`, apiSpanArgs)\n\n    apiSpan.setTag(`api`, api)\n    _.forEach(args.traceTags, (value, key) => {\n      apiSpan.setTag(key, value)\n    })\n\n    // Check that the API is documented.\n    if (!apiList[api]) {\n      reporter.panic(`api: \"${api}\" is not a valid Gatsby api`)\n    }\n\n    const { store } = require(`../redux`)\n    const plugins = store.getState().flattenedPlugins\n    // Get the list of plugins that implement gatsby-node\n    if (!filteredPlugins) {\n      filteredPlugins = plugins.filter(plugin => hasAPIFile(plugin))\n    }\n\n    // Break infinite loops.\n    // Sometimes a plugin will implement an API and call an\n    // action which will trigger the same API being called.\n    // \"onCreatePage\" is the only example right now.\n    // In these cases, we should avoid calling the originating plugin\n    // again.\n    let noSourcePluginPlugins = filteredPlugins\n    if (pluginSource) {\n      noSourcePluginPlugins = filteredPlugins.filter(\n        p => p.name !== pluginSource\n      )\n    }\n\n    const apiRunInstance = {\n      api,\n      args,\n      pluginSource,\n      resolve,\n      span: apiSpan,\n      startTime: new Date().toJSON(),\n      traceId: args.traceId,\n    }\n\n    // Generate IDs for api runs. Most IDs we generate from the args\n    // but some API calls can have very large argument objects so we\n    // have special ways of generating IDs for those to avoid stringifying\n    // large objects.\n    let id\n    if (api === `setFieldsOnGraphQLNodeType`) {\n      id = `${api}${apiRunInstance.startTime}${args.type.name}${args.traceId}`\n    } else if (api === `onCreateNode`) {\n      id = `${api}${apiRunInstance.startTime}${\n        args.node.internal.contentDigest\n      }${args.traceId}`\n    } else if (api === `preprocessSource`) {\n      id = `${api}${apiRunInstance.startTime}${args.filename}${args.traceId}`\n    } else if (api === `onCreatePage`) {\n      id = `${api}${apiRunInstance.startTime}${args.page.path}${args.traceId}`\n    } else {\n      id = `${api}|${apiRunInstance.startTime}|${\n        apiRunInstance.traceId\n      }|${JSON.stringify(args)}`\n    }\n    apiRunInstance.id = id\n\n    if (args.waitForCascadingActions) {\n      waitingForCasacadeToFinish.push(apiRunInstance)\n    }\n\n    apisRunningById.set(apiRunInstance.id, apiRunInstance)\n    if (apisRunningByTraceId.has(apiRunInstance.traceId)) {\n      const currentCount = apisRunningByTraceId.get(apiRunInstance.traceId)\n      apisRunningByTraceId.set(apiRunInstance.traceId, currentCount + 1)\n    } else {\n      apisRunningByTraceId.set(apiRunInstance.traceId, 1)\n    }\n\n    Promise.mapSeries(noSourcePluginPlugins, plugin => {\n      let pluginName =\n        plugin.name === `default-site-plugin`\n          ? `gatsby-node.js`\n          : `Plugin ${plugin.name}`\n\n      return new Promise(resolve => {\n        resolve(runAPI(plugin, api, { ...args, parentSpan: apiSpan }))\n      }).catch(err => {\n        reporter.panicOnBuild(`${pluginName} returned an error`, err)\n        return null\n      })\n    }).then(results => {\n      // Remove runner instance\n      apisRunningById.delete(apiRunInstance.id)\n      const currentCount = apisRunningByTraceId.get(apiRunInstance.traceId)\n      apisRunningByTraceId.set(apiRunInstance.traceId, currentCount - 1)\n\n      if (apisRunningById.size === 0) {\n        const { emitter } = require(`../redux`)\n        emitter.emit(`API_RUNNING_QUEUE_EMPTY`)\n      }\n\n      // Filter empty results\n      apiRunInstance.results = results.filter(result => !_.isEmpty(result))\n\n      // Filter out empty responses and return if the\n      // api caller isn't waiting for cascading actions to finish.\n      if (!args.waitForCascadingActions) {\n        apiSpan.finish()\n        resolve(apiRunInstance.results)\n      }\n\n      // Check if any of our waiters are done.\n      waitingForCasacadeToFinish = waitingForCasacadeToFinish.filter(\n        instance => {\n          // If none of its trace IDs are running, it's done.\n          const apisByTraceIdCount = apisRunningByTraceId.get(instance.traceId)\n          if (apisByTraceIdCount === 0) {\n            instance.span.finish()\n            instance.resolve(instance.results)\n            return false\n          } else {\n            return true\n          }\n        }\n      )\n      return\n    })\n  })\n"],"file":"api-runner-node.js"}